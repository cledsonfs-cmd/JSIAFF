/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JFCadAgente.java
 *
 * Created on 03/06/2010, 07:53:35
 */
package br.gov.rn.emater.Telas.Cadastros;

import br.gov.rn.emater.Base.Imprimir;
import br.gov.rn.emater.Classes.Agente;
import br.gov.rn.emater.Classes.Usuario;
import br.gov.rn.emater.Controler.AgenteController;
import br.gov.rn.emater.DataSources.ListaAgentesDS;
import br.gov.rn.emater.Modelos.AgentesTabela;
import java.awt.Image;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.IOException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author cledsonfs
 */
public class JFCadAgente extends javax.swing.JFrame {

    private Usuario usuario;
    private boolean alterar = false;
    private AgenteController controller = new AgenteController();
    private Agente alterarAgente = null;
    private Image imagem;
    private Icon icone;
    private boolean imagemPadrao = true;
    private String menssagem = "";
    private HashMap<String, String> parametros;

    /** Creates new form JFCadAgente */
    public JFCadAgente(Usuario usuario) {
        this.usuario = usuario;
        initComponents();
        cargatabela();
        cargaImagemPadrao();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTFPopular = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        jBNovo = new javax.swing.JButton();
        jBExcluir = new javax.swing.JButton();
        jBAlterar = new javax.swing.JButton();
        jBCancAlter = new javax.swing.JButton();
        jBImprimir = new javax.swing.JButton();
        jBSalvar = new javax.swing.JButton();
        jBFechar = new javax.swing.JButton();
        jBColar = new javax.swing.JButton();
        jBRemovImg = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTFCientifico = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLImagem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(".:JSIAFF:Cadastro de Agentes Causadores:.");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14));
        jLabel1.setForeground(new java.awt.Color(0, 0, 128));
        jLabel1.setText("Cadastro de Agentes Causadores");

        jLabel2.setText("Nome popular:");

        jTFPopular.setBorder(null);
        jTFPopular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFPopularActionPerformed(evt);
            }
        });
        jTFPopular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFPopularKeyReleased(evt);
            }
        });

        jScrollPane1.setFont(new java.awt.Font("Arial", 0, 10));

        jTable1.setFont(new java.awt.Font("Arial", 0, 10));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jToolBar1.setRollover(true);

        jBNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/add_obj.gif"))); // NOI18N
        jBNovo.setToolTipText("Novo");
        jBNovo.setFocusable(false);
        jBNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovoActionPerformed(evt);
            }
        });
        jToolBar1.add(jBNovo);

        jBExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/delete_obj.gif"))); // NOI18N
        jBExcluir.setToolTipText("Excluir");
        jBExcluir.setFocusable(false);
        jBExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirActionPerformed(evt);
            }
        });
        jToolBar1.add(jBExcluir);

        jBAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/change_obj.gif"))); // NOI18N
        jBAlterar.setToolTipText("Alterar");
        jBAlterar.setFocusable(false);
        jBAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarActionPerformed(evt);
            }
        });
        jToolBar1.add(jBAlterar);

        jBCancAlter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/refresh_nav.gif"))); // NOI18N
        jBCancAlter.setToolTipText("Cancelar Alteração");
        jBCancAlter.setFocusable(false);
        jBCancAlter.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBCancAlter.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBCancAlter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancAlterActionPerformed(evt);
            }
        });
        jToolBar1.add(jBCancAlter);

        jBImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/print_edit.gif"))); // NOI18N
        jBImprimir.setFocusable(false);
        jBImprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBImprimir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImprimirActionPerformed(evt);
            }
        });
        jToolBar1.add(jBImprimir);

        jBSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/save_edit.gif"))); // NOI18N
        jBSalvar.setToolTipText("Salvar");
        jBSalvar.setFocusable(false);
        jBSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarActionPerformed(evt);
            }
        });
        jToolBar1.add(jBSalvar);

        jBFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/close_view.gif"))); // NOI18N
        jBFechar.setToolTipText("Fechar");
        jBFechar.setFocusable(false);
        jBFechar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBFechar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFecharActionPerformed(evt);
            }
        });
        jToolBar1.add(jBFechar);

        jBColar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/paste_edit.gif"))); // NOI18N
        jBColar.setToolTipText("Colar imagem");
        jBColar.setFocusable(false);
        jBColar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBColar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBColar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBColarActionPerformed(evt);
            }
        });
        jToolBar1.add(jBColar);

        jBRemovImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/backward_nav.gif"))); // NOI18N
        jBRemovImg.setToolTipText("Remover imagem");
        jBRemovImg.setFocusable(false);
        jBRemovImg.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBRemovImg.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBRemovImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRemovImgActionPerformed(evt);
            }
        });
        jToolBar1.add(jBRemovImg);

        jLabel3.setText("Nome científico:");

        jTFCientifico.setEnabled(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Imagem", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLImagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLImagem.setToolTipText("Click 2 vezes para ampliar");
        jLImagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLImagemMouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLImagem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLImagem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 121, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel3)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 417, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jTFCientifico, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
                            .add(jTFPopular, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jToolBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 716, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTFPopular, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTFCientifico, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jToolBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 716, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        java.awt.Dimension dialogSize = getSize();
        setLocation((screenSize.width-dialogSize.width)/2,(screenSize.height-dialogSize.height)/2);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedRow() > -1) {
            int id = (Integer) jTable1.getValueAt(jTable1.getSelectedRow(), 1);
            alterarAgente = controller.localizarPorID(id);
            jTFPopular.setText(alterarAgente.getDescricao().trim());
            jTFCientifico.setText(alterarAgente.getNomecientifico().trim());
            icone = alterarAgente.getImagem();
            jLImagem.setText(null);
            jLImagem.setIcon(new ImageIcon(((ImageIcon) icone).getImage().getScaledInstance(100, -1, 100)));
        }
}//GEN-LAST:event_jTable1MouseClicked

    private void jBNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovoActionPerformed
        jTFPopular.setText("");
        jTFPopular.setEnabled(true);
        jTFCientifico.setText("");
        jTFCientifico.setEnabled(true);
        jTFPopular.requestFocus();
        cargaImagemPadrao();
}//GEN-LAST:event_jBNovoActionPerformed

    private void jBExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirActionPerformed
        if (jTable1.getSelectedRow() > -1) {
            int id = (Integer) jTable1.getValueAt(jTable1.getSelectedRow(), 1);
            Agente agente = controller.localizarPorID(id);

            int opc = JOptionPane.showConfirmDialog(this, "Confirma a exclusão do registro?", ".:JSIAFF:Pergunta:.", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if (opc == 0) {
                controller.set(agente);
                try {
                    boolean retorno = controller.excluir();
                    menssagem = controller.getMenssagemRetorno();
                    if (retorno) {
                        JOptionPane.showMessageDialog(this, menssagem, ".:JSIAFF:Mensagem:.", JOptionPane.INFORMATION_MESSAGE);
                        limpaTela();
                        cargatabela();
                        cargaImagemPadrao();
                    } else {
                        JOptionPane.showMessageDialog(this, menssagem, ".:JSIAFF:Error:.", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (Exception ex) {
                    Logger.getLogger(JFCadAgente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
}//GEN-LAST:event_jBExcluirActionPerformed

    private void jBAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarActionPerformed
        alterar = true;
        jTFPopular.setEnabled(true);
        jTFCientifico.setEnabled(true);
}//GEN-LAST:event_jBAlterarActionPerformed

    private void jBSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarActionPerformed
        if (jTFCientifico.getText().trim().length() == 0) {
            jTFCientifico.setText("Nome científico não informado!");
        }
        int opc = 0;
        if (imagemPadrao) {
            opc = JOptionPane.showConfirmDialog(this, "Confirma a inserção sem uma imagem?", ".:JSIAFF:Pergunta:.", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        }
        if (opc == 0) {
            Agente agente;
            if (alterar && alterarAgente != null) {
                agente = alterarAgente;
            } else {
                agente = new Agente();
            }
            agente.setDescricao(jTFPopular.getText().trim().toUpperCase());
            agente.setNomecientifico(jTFCientifico.getText().trim().toUpperCase());
            agente.setDatacadastro(new Timestamp(new Date().getTime()));
            agente.setIdUsuario(usuario.getIdUsuario());
            agente.setImagem(new ImageIcon(imagem));

            controller.set(agente);

            try {
                boolean retorno = controller.salvar(alterar);
                menssagem = controller.getMenssagemRetorno();
                if (retorno) {
                    JOptionPane.showMessageDialog(this, menssagem, ".:JSIAFF:Mensagem:.", JOptionPane.INFORMATION_MESSAGE);
                    limpaTela();
                    cargatabela();
                    cargaImagemPadrao();
                } else {
                    JOptionPane.showMessageDialog(this, menssagem, ".:JSIAFF:Error:.", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception ex) {
                Logger.getLogger(JFCadUsuario.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}//GEN-LAST:event_jBSalvarActionPerformed

    private void limpaTela() {
        jTFPopular.setText("");
        jTFCientifico.setText("");
        alterar = false;
        alterarAgente = null;
        jTFPopular.setEnabled(false);
        jTFCientifico.setEnabled(false);
        menssagem = "";
    }

    private void jBFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFecharActionPerformed
        this.dispose();
}//GEN-LAST:event_jBFecharActionPerformed

    private void jLImagemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLImagemMouseClicked
        /*if (evt.getClickCount() == 2) {
        if (jLabel3.getIcon() != null) {
        //getArtSel().setImagemOriginal(imagem);
        new JDShowArte(this, true, getArtSel(), 1, null).setVisible(true);
        }
        }*/
}//GEN-LAST:event_jLImagemMouseClicked

    private void jBColarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBColarActionPerformed
        imagem = null;
        Clipboard colar = getToolkit().getSystemClipboard();
        Transferable clipData = colar.getContents(this);
        if (colar == null) {
            JOptionPane.showMessageDialog(null, "Não há imagem na área de transferencia");
        } else {
            try {
                imagem = (Image) (clipData.getTransferData(DataFlavor.imageFlavor));
                imagemPadrao = false;
            } catch (UnsupportedFlavorException e1) {
                e1.printStackTrace();
            } catch (IOException e1) {
                e1.printStackTrace();
            }
            icone = new ImageIcon(imagem);
            jLImagem.setText(null);
            jLImagem.setIcon(new ImageIcon(((ImageIcon) icone).getImage().getScaledInstance(100, -1, 100)));
        }
    }//GEN-LAST:event_jBColarActionPerformed

    private void jBRemovImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRemovImgActionPerformed
        cargaImagemPadrao();
    }//GEN-LAST:event_jBRemovImgActionPerformed

    private void jTFPopularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFPopularActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFPopularActionPerformed

    private void jTFPopularKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFPopularKeyReleased
        if (evt.getKeyCode() == 10) {
            jTFCientifico.requestFocus();
        }
    }//GEN-LAST:event_jTFPopularKeyReleased

    private void jBCancAlterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancAlterActionPerformed
        alterar = false;
        jTFPopular.setEnabled(false);
        jTFCientifico.setEnabled(false);
    }//GEN-LAST:event_jBCancAlterActionPerformed

    private void jBImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImprimirActionPerformed
        try {
            List<Agente> agentes = controller.getTodos();
            parametros = new HashMap<String, String>();
            parametros.put("por", usuario.getLogin());
            new Imprimir(agentes, "ModelosRelatorios/listaAgentes.jasper", new ListaAgentesDS((ArrayList) agentes), parametros);
        } catch (Exception ex) {
            Logger.getLogger(JFCadAgente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBImprimirActionPerformed

    private void cargatabela() {
        jTable1.setModel(new AgentesTabela());
        TableRowSorter ts = new TableRowSorter(jTable1.getModel());
        jTable1.setRowSorter(ts);
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Número de registros: " + jTable1.getModel().getRowCount()));
        jTable1.setRowHeight(55);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(55);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(55);
        jTable1.getColumnModel().getColumn(4).setMaxWidth(65);
        jTable1.getColumnModel().getColumn(5).setMaxWidth(80);
    }

    private void cargaImagemPadrao() {
        imagemPadrao = true;
        imagem = new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/sem_imagem.gif")).getImage();
        icone = new ImageIcon(imagem);
        jLImagem.setText(null);
        jLImagem.setIcon(new ImageIcon(((ImageIcon) icone).getImage().getScaledInstance(100, -1, 100)));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlterar;
    private javax.swing.JButton jBCancAlter;
    private javax.swing.JButton jBColar;
    private javax.swing.JButton jBExcluir;
    private javax.swing.JButton jBFechar;
    private javax.swing.JButton jBImprimir;
    private javax.swing.JButton jBNovo;
    private javax.swing.JButton jBRemovImg;
    private javax.swing.JButton jBSalvar;
    private javax.swing.JLabel jLImagem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTFCientifico;
    private javax.swing.JTextField jTFPopular;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
