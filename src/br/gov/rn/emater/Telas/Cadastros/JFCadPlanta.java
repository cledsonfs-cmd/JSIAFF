/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JFCadPlanta.java
 *
 * Created on 26/06/2010, 13:42:14
 */
package br.gov.rn.emater.Telas.Cadastros;

import br.gov.rn.emater.Apoio.CheckableItem;
import br.gov.rn.emater.Classes.Caracteristica;
import br.gov.rn.emater.Classes.Genero;
import br.gov.rn.emater.Classes.Parte;
import br.gov.rn.emater.Classes.Planta;
import br.gov.rn.emater.Classes.PlantaCaracteristica;
import br.gov.rn.emater.Classes.PlantaParte;
import br.gov.rn.emater.Classes.Usuario;
import br.gov.rn.emater.Controler.CaracteristicaController;
import br.gov.rn.emater.Controler.GeneroController;
import br.gov.rn.emater.Controler.ParteController;
import br.gov.rn.emater.Controler.PlantaController;
import br.gov.rn.emater.Modelos.CaracteristicaTabela;
import br.gov.rn.emater.Modelos.PlantasTabela;
import java.awt.Component;
import java.awt.Rectangle;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;
import javax.swing.ListModel;
import javax.swing.UIManager;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author cledsonfs
 */
public class JFCadPlanta extends javax.swing.JFrame {

    private Usuario usuario;
    private boolean alterar = false;
    private Planta alterarPlanta = null;
    private ArrayList<Caracteristica> novasCaracteristicas = null;
    private List<Genero> generos = null;
    private GeneroController generoController = new GeneroController();
    private PlantaController controllerPlanta = new PlantaController();
    private ParteController controllerParte = new ParteController();
    private CaracteristicaController caracteristicaController = new CaracteristicaController();
    private String menssagem = "";

    /** Creates new form JFCadPlanta */
    public JFCadPlanta(Usuario usuario) {
        this.usuario = usuario;
        initComponents();
        cargaTabelaPlanta();
        cargaGenero();
        cargaParte();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTPlanta = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        jBNova = new javax.swing.JButton();
        jBExcluir = new javax.swing.JButton();
        jBAlterar = new javax.swing.JButton();
        jBCancAlter = new javax.swing.JButton();
        jBImprimir = new javax.swing.JButton();
        jBSalvar = new javax.swing.JButton();
        jBFechar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTFCientifico = new javax.swing.JTextField();
        jTFPopular = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jToolBar2 = new javax.swing.JToolBar();
        jBAddCaracteristica = new javax.swing.JButton();
        jBREmoverCaracteristica = new javax.swing.JButton();
        jTFDescricao = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jCBGeneros = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTCaracteristica = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLPartes = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(".:JSIAFF:Cadastro de Plantas:.");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14));
        jLabel1.setForeground(new java.awt.Color(0, 0, 128));
        jLabel1.setText("Cadastro de Plantas");

        jTPlanta.setFont(new java.awt.Font("Arial", 0, 10));
        jTPlanta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTPlanta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTPlantaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTPlanta);

        jToolBar1.setRollover(true);

        jBNova.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/add_obj.gif"))); // NOI18N
        jBNova.setToolTipText("Novo");
        jBNova.setFocusable(false);
        jBNova.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBNova.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBNova.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovaActionPerformed(evt);
            }
        });
        jToolBar1.add(jBNova);

        jBExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/delete_obj.gif"))); // NOI18N
        jBExcluir.setToolTipText("Excluir");
        jBExcluir.setFocusable(false);
        jBExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirActionPerformed(evt);
            }
        });
        jToolBar1.add(jBExcluir);

        jBAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/change_obj.gif"))); // NOI18N
        jBAlterar.setToolTipText("Alterar");
        jBAlterar.setFocusable(false);
        jBAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarActionPerformed(evt);
            }
        });
        jToolBar1.add(jBAlterar);

        jBCancAlter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/refresh_nav.gif"))); // NOI18N
        jBCancAlter.setToolTipText("Cancelar Alteração");
        jBCancAlter.setFocusable(false);
        jBCancAlter.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBCancAlter.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBCancAlter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancAlterActionPerformed(evt);
            }
        });
        jToolBar1.add(jBCancAlter);

        jBImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/print_edit.gif"))); // NOI18N
        jBImprimir.setFocusable(false);
        jBImprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBImprimir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jBImprimir);

        jBSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/save_edit.gif"))); // NOI18N
        jBSalvar.setToolTipText("Salvar");
        jBSalvar.setEnabled(false);
        jBSalvar.setFocusable(false);
        jBSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarActionPerformed(evt);
            }
        });
        jToolBar1.add(jBSalvar);

        jBFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/close_view.gif"))); // NOI18N
        jBFechar.setToolTipText("Fechar");
        jBFechar.setFocusable(false);
        jBFechar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBFechar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFecharActionPerformed(evt);
            }
        });
        jToolBar1.add(jBFechar);

        jLabel3.setText("Nome científico:");

        jLabel2.setText("Nome popular:");

        jTFCientifico.setEnabled(false);

        jTFPopular.setEnabled(false);
        jTFPopular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFPopularActionPerformed(evt);
            }
        });
        jTFPopular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFPopularKeyReleased(evt);
            }
        });

        jLabel4.setText("Caractrísticas:");

        jToolBar2.setRollover(true);

        jBAddCaracteristica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/add_obj.gif"))); // NOI18N
        jBAddCaracteristica.setToolTipText("Adicionar característica");
        jBAddCaracteristica.setEnabled(false);
        jBAddCaracteristica.setFocusable(false);
        jBAddCaracteristica.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBAddCaracteristica.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBAddCaracteristica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAddCaracteristicaActionPerformed(evt);
            }
        });
        jToolBar2.add(jBAddCaracteristica);

        jBREmoverCaracteristica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/delete_obj.gif"))); // NOI18N
        jBREmoverCaracteristica.setToolTipText("Remover característica");
        jBREmoverCaracteristica.setEnabled(false);
        jBREmoverCaracteristica.setFocusable(false);
        jBREmoverCaracteristica.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBREmoverCaracteristica.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBREmoverCaracteristica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBREmoverCaracteristicaActionPerformed(evt);
            }
        });
        jToolBar2.add(jBREmoverCaracteristica);

        jTFDescricao.setEnabled(false);

        jLabel6.setText("Descrição:");

        jLabel7.setText("Família:");

        jCBGeneros.setEnabled(false);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel3)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(0, 0, 0)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jTFCientifico, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jTFDescricao, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                                    .add(jLabel6)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 485, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel4)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jToolBar2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jTFPopular, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 265, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel2))
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jCBGeneros, 0, 286, Short.MAX_VALUE)
                            .add(jLabel7))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(0, 0, 0)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jLabel7))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jTFPopular, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel3))
                    .add(jCBGeneros, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTFCientifico, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel6)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTFDescricao, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jToolBar2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .add(0, 0, 0))
        );

        jTCaracteristica.setFont(new java.awt.Font("Arial", 0, 10));
        jTCaracteristica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTCaracteristica.setEnabled(false);
        jScrollPane3.setViewportView(jTCaracteristica);

        jLabel5.setText("Partes:");

        jLPartes.setFont(new java.awt.Font("Arial", 0, 12));
        jLPartes.setEnabled(false);
        jLPartes.setCellRenderer(new CheckListRenderer());
        jLPartes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLPartesMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jLPartes);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(0, 0, 0)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jScrollPane2, 0, 0, Short.MAX_VALUE)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel5)
                        .add(163, 163, 163))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(0, 0, 0)
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
                    .add(jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
                    .add(jLabel1)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
                    .add(jToolBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 215, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jToolBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(6, 6, 6)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-796)/2, (screenSize.height-582)/2, 796, 582);
    }// </editor-fold>//GEN-END:initComponents

    private void jBNovaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovaActionPerformed
        novasCaracteristicas = new ArrayList<Caracteristica>();

        jTFPopular.setText("");
        jTFPopular.setEnabled(true);
        jTFCientifico.setText("");
        jTFCientifico.setEnabled(true);
        jTFDescricao.setText("");
        jTFDescricao.setEnabled(true);
        jTFPopular.requestFocus();
        jLPartes.setEnabled(true);
        jBAddCaracteristica.setEnabled(true);
        jBREmoverCaracteristica.setEnabled(true);
        jCBGeneros.setEnabled(true);
        jTCaracteristica.setEnabled(true);

        cargaParte();
        cargaTabelaCaracteristica();
}//GEN-LAST:event_jBNovaActionPerformed

    private void jBExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirActionPerformed
        if (jTPlanta.getSelectedRow() > -1) {
            int id = (Integer) jTPlanta.getValueAt(jTPlanta.getSelectedRow(), 0);
            Planta planta = controllerPlanta.localizarPorID(id);
            if (planta != null && planta.getIdplanta() > -1) {
                int opc = JOptionPane.showConfirmDialog(this, "Confirma a exclusão do registro?", ".:JSIAFF:Pergunta:.", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (opc == 0) {
                    controllerPlanta.set(planta);
                    try {
                        boolean retorno = controllerPlanta.excluir();
                        menssagem = controllerPlanta.getMenssagemRetorno();
                        if (retorno) {
                            JOptionPane.showMessageDialog(this, menssagem, ".:JSIAFF:Mensagem:.", JOptionPane.INFORMATION_MESSAGE);
                            limpaTela();
                            cargaTabelaPlanta();
                            cargaParte();
                            cargaTabelaCaracteristica();
                            cargaGenero();
                        } else {
                            JOptionPane.showMessageDialog(this, menssagem, ".:JSIAFF:Error:.", JOptionPane.ERROR_MESSAGE);
                        }
                    } catch (Exception ex) {
                        Logger.getLogger(JFCadAgente.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
}//GEN-LAST:event_jBExcluirActionPerformed

    private void limpaTela() {
        jTFCientifico.setText("");
        jTFPopular.setText("");
        jTFDescricao.setText("");
        alterar = false;
        alterarPlanta = null;
        jTFCientifico.setEnabled(false);
        jTFPopular.setEnabled(false);
        jTFDescricao.setEnabled(false);
        jLPartes.setEnabled(false);
        jBAddCaracteristica.setEnabled(false);
        jBREmoverCaracteristica.setEnabled(false);
        jCBGeneros.setEnabled(false);
    }

    private void jBAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarActionPerformed
        if (jTPlanta.getSelectedRow() > -1) {
            int id = (Integer) jTPlanta.getValueAt(jTPlanta.getSelectedRow(), 0);
            Planta planta = controllerPlanta.localizarPorID(id);

            alterar = true;
            jLPartes.setEnabled(true);
            jBAddCaracteristica.setEnabled(true);
            jBREmoverCaracteristica.setEnabled(true);
            jCBGeneros.setEnabled(true);
            jTCaracteristica.setEnabled(true);
            jTFDescricao.setEnabled(true);
            jTFCientifico.setEnabled(true);
            jTFPopular.setEnabled(true);

            novasCaracteristicas = (ArrayList<Caracteristica>) caracteristicaController.getCaracteristicasPorIdPlanta(planta.getIdplanta());

            jTFPopular.setText(planta.getNomepopular().trim());
            jTFCientifico.setText(planta.getNomecientifico().trim());
            jTFDescricao.setText(planta.getDescricao().trim());

            jCBGeneros.setSelectedItem(planta.getGenero().getDescricao().trim());

            cargaParte(planta.getPlantaParte());
            cargaTabelaCaracteristica(novasCaracteristicas);

            jTFPopular.requestFocus();
        }
}//GEN-LAST:event_jBAlterarActionPerformed

    private void jBSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarActionPerformed
        try {
            Planta planta;
            if (alterar && alterarPlanta != null) {
                planta = alterarPlanta;
                planta.setIdplanta(0);
            } else {
                planta = new Planta();
            }
            planta.setNomecientifico(jTFCientifico.getText().trim().toUpperCase());
            planta.setNomepopular(jTFPopular.getText().trim().toUpperCase());
            planta.setDescricao(jTFDescricao.getText().trim().toUpperCase());
            planta.setDataCadastro(new Timestamp(new Date().getTime()));
            planta.setIdUsuario(usuario.getIdUsuario());

            List<PlantaParte> plantaPartes = new ArrayList<PlantaParte>();
            ListModel model = jLPartes.getModel();
            List<Parte> partes = controllerParte.getTodos();
            int n = model.getSize();
            for (int i = 0; i < n; i++) {
                CheckableItem item = (CheckableItem) model.getElementAt(i);
                if (item.isSelected()) {
                    String v = item.toString();
                    for (Parte parte : partes) {
                        if (v.trim().equals(parte.getDescricao().trim())) {
                            PlantaParte pp = new PlantaParte();
                            pp.setIdParte(parte.getIdparte());
                            plantaPartes.add(pp);
                        }
                    }
                }
            }
            planta.setPlantaParte(plantaPartes);

            List<PlantaCaracteristica> plantaCaracteristicas = new ArrayList<PlantaCaracteristica>();
            for (Caracteristica caracteristica : novasCaracteristicas) {
                PlantaCaracteristica pc = new PlantaCaracteristica();
                pc.setIdCaracteristica(caracteristica.getIdcaracteristica());
                plantaCaracteristicas.add(pc);
            }
            planta.setPlantaCaracteristicas(plantaCaracteristicas);

            for (Genero genero : generos) {
                if (genero.getDescricao().trim().equals(jCBGeneros.getSelectedItem().toString().trim())) {
                    planta.setIdGenero(genero.getIdgenero());
                }
            }

            controllerPlanta.set(planta);

            try {
                boolean retorno = controllerPlanta.salvar(alterar);
                menssagem = controllerPlanta.getMenssagemRetorno();
                if (retorno) {
                    JOptionPane.showMessageDialog(this, menssagem, ".:JSIAFF:Mensagem:.", JOptionPane.INFORMATION_MESSAGE);
                    limpaTela();
                    cargaTabelaPlanta();
                    cargaParte();
                    cargaTabelaCaracteristica();
                    cargaGenero();
                } else {
                    JOptionPane.showMessageDialog(this, menssagem, ".:JSIAFF:Error:.", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception ex) {
                Logger.getLogger(JFCadUsuario.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (Exception ex) {
            Logger.getLogger(JFCadPlanta.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_jBSalvarActionPerformed

    private void jBFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFecharActionPerformed
        this.dispose();
}//GEN-LAST:event_jBFecharActionPerformed

    private void jTFPopularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFPopularActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTFPopularActionPerformed

    private void jTFPopularKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFPopularKeyReleased
        if (evt.getKeyCode() == 10) {
            jTFCientifico.requestFocus();
        }
}//GEN-LAST:event_jTFPopularKeyReleased

    private void jBAddCaracteristicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAddCaracteristicaActionPerformed
        try {
            List<Caracteristica> caracteristicas = caracteristicaController.getTodos();
            if (caracteristicas.size() > 0) {
                String[] descricoes = new String[caracteristicas.size()];
                for (int i = 0; i < caracteristicas.size(); i++) {
                    descricoes[i] = caracteristicas.get(i).getDescricao().trim();
                }
                String valor = (String) JOptionPane.showInputDialog(null, "Selecione a Característica:", ".:JSIAFF:Características:", JOptionPane.QUESTION_MESSAGE, null, descricoes, descricoes[0]);
                if (valor != null) {
                    for (Caracteristica c : caracteristicas) {
                        if (c.getDescricao().trim().equals(valor.trim())) {
                            boolean inserir = true;
                            for (Caracteristica c1 : novasCaracteristicas) {
                                inserir = inserir && (c.getIdcaracteristica() != c1.getIdcaracteristica());
                            }
                            if (inserir) {
                                novasCaracteristicas.add(c);
                            }
                        }
                    }
                    cargaTabelaCaracteristica(novasCaracteristicas);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Não há nenhuma caracteristica cadastrada!", ".:JSIAFF:Error:.", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            Logger.getLogger(JFCadPlanta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBAddCaracteristicaActionPerformed

    private void jBREmoverCaracteristicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBREmoverCaracteristicaActionPerformed
        if (jTCaracteristica.getSelectedRow() > -1) {
            int id = (Integer) jTCaracteristica.getValueAt(jTCaracteristica.getSelectedRow(), 0);
            ArrayList<Caracteristica> caracteristicasTemp = new ArrayList<Caracteristica>();
            for (Caracteristica caracteristica : novasCaracteristicas) {
                if (id != caracteristica.getIdcaracteristica()) {
                    caracteristicasTemp.add(caracteristica);
                }
            }
            novasCaracteristicas = caracteristicasTemp;
            cargaTabelaCaracteristica(novasCaracteristicas);
        }
    }//GEN-LAST:event_jBREmoverCaracteristicaActionPerformed

    private void jLPartesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLPartesMousePressed
        if (jLPartes.isEnabled()) {
            int index = jLPartes.locationToIndex(evt.getPoint());
            CheckableItem item = (CheckableItem) jLPartes.getModel().getElementAt(index);
            item.setSelected(!item.isSelected());
            Rectangle rect = jLPartes.getCellBounds(index, index);
            jLPartes.repaint(rect);
        }
    }//GEN-LAST:event_jLPartesMousePressed

    private void jTPlantaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTPlantaMouseClicked
        if (jTPlanta.getSelectedRow() > -1) {
            int id = (Integer) jTPlanta.getValueAt(jTPlanta.getSelectedRow(), 0);
            alterarPlanta = controllerPlanta.localizarPorID(id);
            jTFCientifico.setText(alterarPlanta.getNomecientifico().trim());
            jTFPopular.setText(alterarPlanta.getNomepopular().trim());
            jTFDescricao.setText(alterarPlanta.getDescricao().trim());
            jCBGeneros.setSelectedItem(alterarPlanta.getGenero().getDescricao().trim());
            cargaParte(alterarPlanta.getPlantaParte());
            cargaTabelaCaracteristica((ArrayList<Caracteristica>) caracteristicaController.getCaracteristicasPorIdPlanta(id));
        }
    }//GEN-LAST:event_jTPlantaMouseClicked

    private void jBCancAlterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancAlterActionPerformed
        alterar = false;
        jLPartes.setEnabled(false);
        jBAddCaracteristica.setEnabled(false);
        jBREmoverCaracteristica.setEnabled(false);
        jCBGeneros.setEnabled(false);
        jTCaracteristica.setEnabled(false);
        jTFDescricao.setEnabled(false);
        jTFCientifico.setEnabled(false);
        jTFPopular.setEnabled(false);
}//GEN-LAST:event_jBCancAlterActionPerformed

    private void cargaParte() {
        cargaParte(null);
    }

    private void cargaParte(List<PlantaParte> partesSel) {
        DefaultListModel dListMmodelo = null;
        try {
            dListMmodelo = new DefaultListModel();
            List<Parte> partes = controllerParte.getTodos();
            boolean check = false;
            for (Parte p : partes) {
                if (partesSel != null) {
                    for (PlantaParte pc : partesSel) {
                        if (p.getIdparte() == pc.getIdParte()) {
                            check = true;
                        }
                    }
                }
                CheckableItem li = new CheckableItem(p.getDescricao());
                li.setSelected(check);
                dListMmodelo.addElement(li);
                check = false;
            }
        } catch (Exception ex) {
            Logger.getLogger(JFCadPlanta.class.getName()).log(Level.SEVERE, null, ex);
        }
        jLPartes.setModel(dListMmodelo);
    }

    class CheckListRenderer extends JCheckBox implements ListCellRenderer {

        private static final long serialVersionUID = 5L;

        public CheckListRenderer() {
            setBackground(UIManager.getColor("List.textBackground"));
            setForeground(UIManager.getColor("List.textForeground"));
        }

        public Component getListCellRendererComponent(JList list, Object value,
                int index, boolean isSelected, boolean hasFocus) {
            setEnabled(list.isEnabled());
            setSelected(((CheckableItem) value).isSelected());
            setToolTipText("Selecione os itens");
            setFont(list.getFont());
            setText(value.toString());
            return this;
        }
    }

    private void cargaTabelaPlanta() {
        jTPlanta.setModel(new PlantasTabela());
        TableRowSorter ts = new TableRowSorter(jTPlanta.getModel());
        jTPlanta.setRowSorter(ts);
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Número de registros: " + jTPlanta.getModel().getRowCount()));
        jTPlanta.getColumnModel().getColumn(0).setMaxWidth(55);
        jTPlanta.getColumnModel().getColumn(4).setMaxWidth(65);
        jTPlanta.getColumnModel().getColumn(5).setMaxWidth(80);
    }

    private void cargaGenero() {
        try {
            generos = generoController.getTodos();
        } catch (Exception ex) {
            Logger.getLogger(JFCadPlanta.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel();
        dcbm.addElement("------");
        for (Genero genero : generos) {
            dcbm.addElement(genero.getDescricao().trim());
        }
        jCBGeneros.setModel(dcbm);
    }

    private void cargaTabelaCaracteristica() {
        cargaTabelaCaracteristica(null);
    }

    private void cargaTabelaCaracteristica(ArrayList<Caracteristica> lista) {
        if (lista == null) {
            jTCaracteristica.setModel(new CaracteristicaTabela(new ArrayList<Caracteristica>()));
        } else {
            jTCaracteristica.setModel(new CaracteristicaTabela(lista));
        }
        TableRowSorter ts = new TableRowSorter(jTCaracteristica.getModel());
        jTCaracteristica.setRowSorter(ts);
        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("Número de registros: " + jTCaracteristica.getModel().getRowCount()));
        jTCaracteristica.getColumnModel().getColumn(0).setMaxWidth(55);
        jTCaracteristica.getColumnModel().getColumn(2).setMaxWidth(65);
        jTCaracteristica.getColumnModel().getColumn(3).setMaxWidth(80);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAddCaracteristica;
    private javax.swing.JButton jBAlterar;
    private javax.swing.JButton jBCancAlter;
    private javax.swing.JButton jBExcluir;
    private javax.swing.JButton jBFechar;
    private javax.swing.JButton jBImprimir;
    private javax.swing.JButton jBNova;
    private javax.swing.JButton jBREmoverCaracteristica;
    private javax.swing.JButton jBSalvar;
    private javax.swing.JComboBox jCBGeneros;
    private javax.swing.JList jLPartes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTCaracteristica;
    private javax.swing.JTextField jTFCientifico;
    private javax.swing.JTextField jTFDescricao;
    private javax.swing.JTextField jTFPopular;
    private javax.swing.JTable jTPlanta;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    // End of variables declaration//GEN-END:variables
}
