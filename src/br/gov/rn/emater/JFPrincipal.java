/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JFPrincipal.java
 *
 * Created on 28/05/2010, 14:47:08
 */
package br.gov.rn.emater;

import br.rn.emater.sobre.AppSis4nb2AboutBox;
import br.rn.emater.sobre.AppSis4nb2App;
import br.gov.rn.emater.Base.BrowserLauncher;
import br.gov.rn.emater.Base.Imprimir;
import br.gov.rn.emater.Classes.Agente;
import br.gov.rn.emater.Classes.Caracteristica;
import br.gov.rn.emater.Classes.Doenca;
import br.gov.rn.emater.Classes.Familia;
import br.gov.rn.emater.Classes.Genero;
import br.gov.rn.emater.Classes.Parte;
import br.gov.rn.emater.Classes.Planta;
import br.gov.rn.emater.Classes.Sintoma;
import br.gov.rn.emater.Classes.Tratamento;
import br.gov.rn.emater.Classes.Usuario;
import br.gov.rn.emater.Controler.AgenteController;
import br.gov.rn.emater.Controler.AmostraController;
import br.gov.rn.emater.Controler.CaracteristicaController;
import br.gov.rn.emater.Controler.DoencaController;
import br.gov.rn.emater.Controler.FamiliaController;
import br.gov.rn.emater.Controler.GeneroController;
import br.gov.rn.emater.Controler.ParteController;
import br.gov.rn.emater.Controler.PlantaController;
import br.gov.rn.emater.Controler.SintomaController;
import br.gov.rn.emater.Controler.TratamentoController;
import br.gov.rn.emater.Controler.UsuarioController;
import br.gov.rn.emater.DataSources.ListaAgentesDS;
import br.gov.rn.emater.DataSources.ListaCaracteristicasDS;
import br.gov.rn.emater.DataSources.ListaDoencasDS;
import br.gov.rn.emater.DataSources.ListaFamiliaDS;
import br.gov.rn.emater.DataSources.ListaGeneroDS;
import br.gov.rn.emater.DataSources.ListaPartesDS;
import br.gov.rn.emater.DataSources.ListaPlantasDS;
import br.gov.rn.emater.DataSources.ListaSintomasDS;
import br.gov.rn.emater.DataSources.ListaTratamentosDS;
import br.gov.rn.emater.DataSources.ListaUsuarioDS;
import br.gov.rn.emater.IA.JFReconhecimento;
import br.gov.rn.emater.IA.NeuronsApplication;
import br.gov.rn.emater.Telas.Cadastros.JFCadAgente;
import br.gov.rn.emater.Telas.Cadastros.JFCadCaracteristicas;
import br.gov.rn.emater.Telas.Cadastros.JFCadDoencas;
import br.gov.rn.emater.Telas.Cadastros.JFCadFamilia;
import br.gov.rn.emater.Telas.Cadastros.JFCadGenero;
import br.gov.rn.emater.Telas.Cadastros.JFCadParte;
import br.gov.rn.emater.Telas.Cadastros.JFCadPlanta;
import br.gov.rn.emater.Telas.Cadastros.JFCadSintoma;
import br.gov.rn.emater.Telas.Cadastros.JFCadTratamento;
import br.gov.rn.emater.Telas.Cadastros.JFCadUsuario;
import br.gov.rn.emater.Telas.Pesquisas.JFPesquisa;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author cledsonfs e ururai
 */
public class JFPrincipal extends javax.swing.JFrame {

    private Usuario usuario;
    private HashMap<String, String> parametros;
    private AgenteController agenteController;
    private AmostraController amostraController;
    private CaracteristicaController caracteristicaController;
    private DoencaController doencaController;
    private FamiliaController familiaController;
    private GeneroController generoController;
    private ParteController parteController;
    private PlantaController plantaController;
    private SintomaController sintomaController;
    private TratamentoController tratamentoController;
    private UsuarioController usuarioController;
    private JDialog aboutBox;

    /** Creates new form JFPrincipal */
    public JFPrincipal(Usuario usuario) {
        this.usuario = usuario;
        initComponents();
        agenteController = new AgenteController();
        amostraController = new AmostraController();
        caracteristicaController = new CaracteristicaController();
        doencaController = new DoencaController();
        familiaController = new FamiliaController();
        generoController = new GeneroController();
        parteController = new ParteController();
        plantaController = new PlantaController();
        sintomaController = new SintomaController();
        tratamentoController = new TratamentoController();
        usuarioController = new UsuarioController();
        acesso();
        temporizador();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextPane1 = new javax.swing.JTextPane();
        jLDataHora = new javax.swing.JLabel();
        JLUsuario = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMICadAgente = new javax.swing.JMenuItem();
        jMICadCaracteristica = new javax.swing.JMenuItem();
        jMICadDoenca = new javax.swing.JMenuItem();
        jMICadFamilia = new javax.swing.JMenuItem();
        jMICadGenero = new javax.swing.JMenuItem();
        jMICadPartes = new javax.swing.JMenuItem();
        jMICadPlantas = new javax.swing.JMenuItem();
        jMICadSintomas = new javax.swing.JMenuItem();
        jMICadTratamentos = new javax.swing.JMenuItem();
        jMIcadUsuarios = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem22 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenuItem20 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem23 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(".:JSIAFF:Principal:.");

        jPanel1.setBackground(new java.awt.Color(232, 242, 255));

        jTextPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Informações do sistema"));
        jTextPane1.setEditable(false);
        jTextPane1.setFont(new java.awt.Font("Courier", 0, 12));

        jLDataHora.setText("jLabel1");

        JLUsuario.setText("Usuário:");

        jTextPane2.setBackground(new java.awt.Color(255, 255, 192));
        jTextPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Dicas"));
        jTextPane2.setEnabled(false);
        jScrollPane1.setViewportView(jTextPane2);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jTextPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(JLUsuario)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 623, Short.MAX_VALUE)
                        .add(jLDataHora))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(JLUsuario)
                    .add(jLDataHora))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTextPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 274, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 154, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenu5.setText("Início");
        jMenu5.setFont(new java.awt.Font("Arial", 0, 12));

        jMenuItem1.setFont(new java.awt.Font("Arial", 0, 12));
        jMenuItem1.setText("Sair");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem1);

        jMenuBar1.add(jMenu5);

        jMenu1.setText("Cadastros");
        jMenu1.setFont(new java.awt.Font("Arial", 0, 12));

        jMICadAgente.setFont(new java.awt.Font("Arial", 0, 12));
        jMICadAgente.setText("Agentes Causadores");
        jMICadAgente.setEnabled(false);
        jMICadAgente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICadAgenteActionPerformed(evt);
            }
        });
        jMenu1.add(jMICadAgente);

        jMICadCaracteristica.setFont(new java.awt.Font("Arial", 0, 12));
        jMICadCaracteristica.setText("Características");
        jMICadCaracteristica.setEnabled(false);
        jMICadCaracteristica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICadCaracteristicaActionPerformed(evt);
            }
        });
        jMenu1.add(jMICadCaracteristica);

        jMICadDoenca.setFont(new java.awt.Font("Arial", 0, 12));
        jMICadDoenca.setText("Doenças");
        jMICadDoenca.setEnabled(false);
        jMICadDoenca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICadDoencaActionPerformed(evt);
            }
        });
        jMenu1.add(jMICadDoenca);

        jMICadFamilia.setFont(new java.awt.Font("Arial", 0, 12));
        jMICadFamilia.setText("Famílias");
        jMICadFamilia.setEnabled(false);
        jMICadFamilia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICadFamiliaActionPerformed(evt);
            }
        });
        jMenu1.add(jMICadFamilia);

        jMICadGenero.setFont(new java.awt.Font("Arial", 0, 12));
        jMICadGenero.setText("Gêneros");
        jMICadGenero.setEnabled(false);
        jMICadGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICadGeneroActionPerformed(evt);
            }
        });
        jMenu1.add(jMICadGenero);

        jMICadPartes.setFont(new java.awt.Font("Arial", 0, 12));
        jMICadPartes.setText("Partes da Planta");
        jMICadPartes.setEnabled(false);
        jMICadPartes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICadPartesActionPerformed(evt);
            }
        });
        jMenu1.add(jMICadPartes);

        jMICadPlantas.setFont(new java.awt.Font("Arial", 0, 12));
        jMICadPlantas.setText("Plantas");
        jMICadPlantas.setEnabled(false);
        jMICadPlantas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICadPlantasActionPerformed(evt);
            }
        });
        jMenu1.add(jMICadPlantas);

        jMICadSintomas.setFont(new java.awt.Font("Arial", 0, 12));
        jMICadSintomas.setText("Sintomas das Doenças");
        jMICadSintomas.setEnabled(false);
        jMICadSintomas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICadSintomasActionPerformed(evt);
            }
        });
        jMenu1.add(jMICadSintomas);

        jMICadTratamentos.setFont(new java.awt.Font("Arial", 0, 12));
        jMICadTratamentos.setText("Tratamentos");
        jMICadTratamentos.setEnabled(false);
        jMICadTratamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICadTratamentosActionPerformed(evt);
            }
        });
        jMenu1.add(jMICadTratamentos);

        jMIcadUsuarios.setFont(new java.awt.Font("Arial", 0, 12));
        jMIcadUsuarios.setText("Usuários");
        jMIcadUsuarios.setEnabled(false);
        jMIcadUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIcadUsuariosActionPerformed(evt);
            }
        });
        jMenu1.add(jMIcadUsuarios);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Pesquisas");
        jMenu2.setFont(new java.awt.Font("Arial", 0, 12));

        jMenuItem22.setFont(new java.awt.Font("Arial", 0, 12));
        jMenuItem22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/search_src.gif"))); // NOI18N
        jMenuItem22.setText("Pesquisar Informações");
        jMenuItem22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem22ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem22);

        jMenuBar1.add(jMenu2);

        jMenu7.setText("Reconhecimento");
        jMenu7.setFont(new java.awt.Font("Arial", 0, 12));

        jMenuItem3.setFont(new java.awt.Font("Arial", 0, 12));
        jMenuItem3.setText("Geração da base de conhecimento");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem3);

        jMenuItem4.setFont(new java.awt.Font("Arial", 0, 12));
        jMenuItem4.setText("Processar reconhecimento");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem4);

        jMenuBar1.add(jMenu7);

        jMenu3.setText("Relatórios");
        jMenu3.setFont(new java.awt.Font("Arial", 0, 12));

        jMenu6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/welcome_editor.gif"))); // NOI18N
        jMenu6.setText("Cadastrados");
        jMenu6.setFont(new java.awt.Font("Arial", 0, 12));

        jMenuItem12.setFont(new java.awt.Font("Arial", 0, 12));
        jMenuItem12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/print_edit.gif"))); // NOI18N
        jMenuItem12.setText("Agentes Causadores");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem12);

        jMenuItem13.setFont(new java.awt.Font("Arial", 0, 12));
        jMenuItem13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/print_edit.gif"))); // NOI18N
        jMenuItem13.setText("Características");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem13);

        jMenuItem14.setFont(new java.awt.Font("Arial", 0, 12));
        jMenuItem14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/print_edit.gif"))); // NOI18N
        jMenuItem14.setText("Doenças");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem14);

        jMenuItem15.setFont(new java.awt.Font("Arial", 0, 12));
        jMenuItem15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/print_edit.gif"))); // NOI18N
        jMenuItem15.setText("Famílias");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem15);

        jMenuItem16.setFont(new java.awt.Font("Arial", 0, 12));
        jMenuItem16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/print_edit.gif"))); // NOI18N
        jMenuItem16.setText("Gêneros");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem16);

        jMenuItem17.setFont(new java.awt.Font("Arial", 0, 12));
        jMenuItem17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/print_edit.gif"))); // NOI18N
        jMenuItem17.setText("Partes da Planta");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem17);

        jMenuItem18.setFont(new java.awt.Font("Arial", 0, 12));
        jMenuItem18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/print_edit.gif"))); // NOI18N
        jMenuItem18.setText("Plantas");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem18);

        jMenuItem19.setFont(new java.awt.Font("Arial", 0, 12));
        jMenuItem19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/print_edit.gif"))); // NOI18N
        jMenuItem19.setText("Sintomas das Doenças");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem19);

        jMenuItem20.setFont(new java.awt.Font("Arial", 0, 12));
        jMenuItem20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/print_edit.gif"))); // NOI18N
        jMenuItem20.setText("Tratamentos");
        jMenuItem20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem20ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem20);

        jMenuItem21.setFont(new java.awt.Font("Arial", 0, 12));
        jMenuItem21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/rn/emater/icones/print_edit.gif"))); // NOI18N
        jMenuItem21.setText("Usuários");
        jMenuItem21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem21ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem21);

        jMenu3.add(jMenu6);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("?");
        jMenu4.setFont(new java.awt.Font("Arial", 0, 12));

        jMenuItem23.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jMenuItem23.setText("Sobre");
        jMenuItem23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem23ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem23);

        jMenuItem2.setFont(new java.awt.Font("Arial", 0, 12));
        jMenuItem2.setText("JavaDoc SIAFF");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem2);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-800)/2, (screenSize.height-622)/2, 800, 622);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMICadAgenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICadAgenteActionPerformed
        new JFCadAgente(usuario).setVisible(true);
    }//GEN-LAST:event_jMICadAgenteActionPerformed

    private void jMIcadUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIcadUsuariosActionPerformed
        new JFCadUsuario(usuario).setVisible(true);
    }//GEN-LAST:event_jMIcadUsuariosActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem21ActionPerformed
        try {
            List<Usuario> usuarios = usuarioController.getTodos();
            parametros = new HashMap<String, String>();
            parametros.put("por", usuario.getLogin());
            new Imprimir(usuarios, "ModelosRelatorios/listaUsuario.jasper", new ListaUsuarioDS((ArrayList) usuarios), parametros);
        } catch (Exception ex) {
            Logger.getLogger(JFPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem21ActionPerformed

    private void jMICadGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICadGeneroActionPerformed
        try {
            if (familiaController.getTodos().size() == 0) {
                JOptionPane.showMessageDialog(this, "Não há nenhuma família cadastrada!", ".:JSIAFF:Error:.", JOptionPane.ERROR_MESSAGE);
            } else {
                new JFCadGenero(usuario).setVisible(true);
            }
        } catch (Exception ex) {
            Logger.getLogger(JFPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jMICadGeneroActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        try {
            List<Genero> generos = generoController.getTodos();
            parametros = new HashMap<String, String>();
            parametros.put("por", usuario.getLogin());
            new Imprimir(generos, "ModelosRelatorios/listaGeneros.jasper", new ListaGeneroDS((ArrayList) generos), parametros);
        } catch (Exception ex) {
            Logger.getLogger(JFPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMICadFamiliaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICadFamiliaActionPerformed
        new JFCadFamilia(usuario).setVisible(true);
    }//GEN-LAST:event_jMICadFamiliaActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        try {
            List<Familia> familias = familiaController.getTodos();
            parametros = new HashMap<String, String>();
            parametros.put("por", usuario.getLogin());
            new Imprimir(familias, "ModelosRelatorios/listaFamilias.jasper", new ListaFamiliaDS((ArrayList) familias), parametros);
        } catch (Exception ex) {
            Logger.getLogger(JFPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMICadPartesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICadPartesActionPerformed
        new JFCadParte(usuario).setVisible(true);
    }//GEN-LAST:event_jMICadPartesActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        try {
            List<Parte> partes = parteController.getTodos();
            parametros = new HashMap<String, String>();
            parametros.put("por", usuario.getLogin());
            new Imprimir(partes, "ModelosRelatorios/listaPartes.jasper", new ListaPartesDS((ArrayList) partes), parametros);
        } catch (Exception ex) {
            Logger.getLogger(JFPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMICadCaracteristicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICadCaracteristicaActionPerformed
        new JFCadCaracteristicas(usuario).setVisible(true);
    }//GEN-LAST:event_jMICadCaracteristicaActionPerformed

    private void jMICadTratamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICadTratamentosActionPerformed
        new JFCadTratamento(usuario).setVisible(true);
    }//GEN-LAST:event_jMICadTratamentosActionPerformed

    private void jMICadSintomasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICadSintomasActionPerformed
        new JFCadSintoma(usuario).setVisible(true);
    }//GEN-LAST:event_jMICadSintomasActionPerformed

    private void jMICadDoencaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICadDoencaActionPerformed
        new JFCadDoencas(usuario).setVisible(true);
    }//GEN-LAST:event_jMICadDoencaActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        try {
            List<Agente> agentes = agenteController.getTodos();
            parametros = new HashMap<String, String>();
            parametros.put("por", usuario.getLogin());
            new Imprimir(agentes, "ModelosRelatorios/listaAgentes.jasper", new ListaAgentesDS((ArrayList) agentes), parametros);
        } catch (Exception ex) {
            Logger.getLogger(JFPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        try {
            List<Caracteristica> caracteristicas = caracteristicaController.getTodos();
            parametros = new HashMap<String, String>();
            parametros.put("por", usuario.getLogin());
            new Imprimir(caracteristicas, "ModelosRelatorios/listaCaracteristicas.jasper", new ListaCaracteristicasDS((ArrayList) caracteristicas), parametros);
        } catch (Exception ex) {
            Logger.getLogger(JFPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        try {
            List<Sintoma> sintomas = sintomaController.getTodos();
            parametros = new HashMap<String, String>();
            parametros.put("por", usuario.getLogin());
            new Imprimir(sintomas, "ModelosRelatorios/listaSintomas.jasper", new ListaSintomasDS((ArrayList) sintomas), parametros);
        } catch (Exception ex) {
            Logger.getLogger(JFPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void jMenuItem20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem20ActionPerformed
        try {
            List<Tratamento> tratamentos = tratamentoController.getTodos();
            parametros = new HashMap<String, String>();
            parametros.put("por", usuario.getLogin());
            new Imprimir(tratamentos, "ModelosRelatorios/listaTratamentos.jasper", new ListaTratamentosDS((ArrayList) tratamentos), parametros);
        } catch (Exception ex) {
            Logger.getLogger(JFPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem20ActionPerformed

    private void jMICadPlantasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICadPlantasActionPerformed
        new JFCadPlanta(usuario).setVisible(true);
    }//GEN-LAST:event_jMICadPlantasActionPerformed

    private void jMenuItem22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem22ActionPerformed
        new JFPesquisa().setVisible(true);
    }//GEN-LAST:event_jMenuItem22ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
            BrowserLauncher.openURL("file:///C:/SIAFF/javadoc/index.html");
        } catch (IOException ex) {
            Logger.getLogger(JFPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        new NeuronsApplication().start();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        new JFReconhecimento(usuario).setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        try {
            List<Doenca> doencas = doencaController.getTodos();
            parametros = new HashMap<String, String>();
            parametros.put("por", usuario.getLogin());
            new Imprimir(doencas, "ModelosRelatorios/listaDoencas.jasper", new ListaDoencasDS((ArrayList) doencas), parametros);
        } catch (Exception ex) {
            Logger.getLogger(JFPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        try {
            List<Planta> plantas = plantaController.getTodos();
            parametros = new HashMap<String, String>();
            parametros.put("por", usuario.getLogin());
            new Imprimir(plantas, "ModelosRelatorios/listaPlantas.jasper", new ListaPlantasDS((ArrayList) plantas), parametros);
        } catch (Exception ex) {
            Logger.getLogger(JFPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jMenuItem23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem23ActionPerformed
        if (aboutBox == null) {
            JFrame mainFrame = AppSis4nb2App.getApplication().getMainFrame();
            aboutBox = new AppSis4nb2AboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        AppSis4nb2App.getApplication().show(aboutBox);
    }//GEN-LAST:event_jMenuItem23ActionPerformed

    private void temporizador() {
        new Thread() {

            public void run() {
                try {
                    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                    try {
                        while (true) {
                            String informacao = "";
                            informacao += "Número de agentes causadores cadastrados:............." + agenteController.getTodos().size();
                            informacao += "\nNúmero de amostra cadastradas:........................" + amostraController.getTodos().size();
                            informacao += "\nNúmero de caracteristicas cadastradas:................" + caracteristicaController.getTodos().size();
                            informacao += "\nNúmero de doenças cadastradas:........................" + doencaController.getTodos().size();
                            informacao += "\nNúmero de famílias cadastradas:......................." + familiaController.getTodos().size();
                            informacao += "\nNúmero de gêneros cadastrados:........................" + generoController.getTodos().size();
                            informacao += "\nNúmero de partes cadastradas:........................." + parteController.getTodos().size();
                            informacao += "\nNúmero de plantas cadastradas:........................" + plantaController.getTodos().size();
                            informacao += "\nNúmero de sintomas cadastrados:......................." + sintomaController.getTodos().size();
                            informacao += "\nNúmero de tratamentos cadastrados:...................." + tratamentoController.getTodos().size();
                            informacao += "\nNúmero de usuários cadastrados:......................." + usuarioController.getTodos().size();
                            jTextPane1.setText(informacao);
                            jLDataHora.setText(sdf.format(new Date()));
                            sleep(5000);
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                } catch (Exception ex) {
                    Logger.getLogger(JFPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }.start();
    }

    private void acesso() {
        if (usuario.isAdministrador()) {
            JLUsuario.setText("Administrador: " + usuario.getLogin());
        } else if (usuario.isEspecialista()) {
            JLUsuario.setText("Especialista: " + usuario.getLogin());
        } else if (usuario.isOperador()) {
            JLUsuario.setText("Operador: " + usuario.getLogin());
        } else if (usuario.isOperador()) {
            JLUsuario.setText("Usuário: " + usuario.getLogin());
        }

        usuarioController.set(usuario);

        jMICadAgente.setEnabled(usuarioController.acesso(UsuarioController.Permissoes.CADASTRAR_AGENTES_CAUSADORES));
        jMICadCaracteristica.setEnabled(usuarioController.acesso(UsuarioController.Permissoes.CADASTRAR_CARACTERISTICAS));
        jMICadDoenca.setEnabled(usuarioController.acesso(UsuarioController.Permissoes.CADASTRAR_DOENCAS));
        jMICadFamilia.setEnabled(usuarioController.acesso(UsuarioController.Permissoes.CADASTRAR_FAMILIA));
        jMICadGenero.setEnabled(usuarioController.acesso(UsuarioController.Permissoes.CADASTRAR_GENERO));
        jMICadPartes.setEnabled(usuarioController.acesso(UsuarioController.Permissoes.CADASTRAR_PARTES_DA_PLANTA));
        jMICadPlantas.setEnabled(usuarioController.acesso(UsuarioController.Permissoes.CADASTRAR_PLANTAS));
        jMICadSintomas.setEnabled(usuarioController.acesso(UsuarioController.Permissoes.CADASTRAR_SINTOMAS_DAS_DOENCAS));
        jMICadTratamentos.setEnabled(usuarioController.acesso(UsuarioController.Permissoes.CADASTRAR_TRATAMENTOS));
        jMIcadUsuarios.setEnabled(usuarioController.acesso(UsuarioController.Permissoes.CADASTRAR_USUARIOS));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLUsuario;
    private javax.swing.JLabel jLDataHora;
    private javax.swing.JMenuItem jMICadAgente;
    private javax.swing.JMenuItem jMICadCaracteristica;
    private javax.swing.JMenuItem jMICadDoenca;
    private javax.swing.JMenuItem jMICadFamilia;
    private javax.swing.JMenuItem jMICadGenero;
    private javax.swing.JMenuItem jMICadPartes;
    private javax.swing.JMenuItem jMICadPlantas;
    private javax.swing.JMenuItem jMICadSintomas;
    private javax.swing.JMenuItem jMICadTratamentos;
    private javax.swing.JMenuItem jMIcadUsuarios;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem22;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    // End of variables declaration//GEN-END:variables
}
