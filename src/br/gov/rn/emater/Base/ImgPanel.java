/*
 * imglabel.java
 *
 * Created on 6 de Fevereiro de 2007, 13:44
 */
package br.gov.rn.emater.Base;

import java.awt.Color;
import java.awt.Component;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.JToolTip;
import javax.swing.ListCellRenderer;

/**
 *
 * @author  Vinicius
 */
public class ImgPanel extends javax.swing.JPanel {

    private static final long serialVersionUID = 2673458971256075116L;
    private static ListCellRenderer irend;
    private static ListCellRenderer defirend;
    private ImageIcon imagem;
    private String linha1 = "";
    private String linha2 = "";
    private String linha3 = "";
    private String retorno = "";
    private Color backgroundOriginal = null;

    /** Creates new form imglabel */
    public ImgPanel(ImageIcon img, String linha1, String linha2, String linha3) {
        initComponents();
        this.setImagem(img);
        jLimagem.setIcon(img);
        jLimagem.setText("");
        setLinha1(linha1);
        setLinha2(linha2);
        setLinha3(linha3);
        //Cgvp.setToolTipExt(this,new String[] {linha1,"\n"+linha2,"\n"+linha3});
        setToolTipText("<html><table width=270><tr><td>" + 
                linha1 + "<br/>" + linha2 + "<br/>" + linha3 +
                "</td></tr></table></html>");
    }

    @Override
    public JToolTip createToolTip() {
        JToolTip tip = new JToolTip();
        tip.setPreferredSize(this.getPreferredSize());
        tip.setComponent(this); //add(this);
        System.out.println("Imgpanel - Isto ainda n√£o funcionou ? Eu passei por aqui");
        return tip;
    }

    public String getLinha1() {
        return linha1;
    }

    public String getLinha2() {
        return linha2;
    }

    public String getLinha3() {
        return linha3;
    }

    public void setLinha1(String linha1) {
        this.linha1 = linha1;
        getJLinha1().setText(linha1);
    }

    public void setLinha2(String linha2) {
        this.linha2 = linha2;
        getJLinha2().setText(linha2);
    }

    public void setLinha3(String linha3) {
        this.linha3 = linha3;
        getJLinha3().setText(linha3);
    }

    public static ListCellRenderer getImgRender() {
        if (irend == null) {
            irend = new ImgRender();
        }
        return irend;
    }

    public static ListCellRenderer getDefaultListCellRenderer() {
        if (defirend == null) {
            defirend = new JList().getCellRenderer();
        }
        return defirend;
    }

    public static ImgPanel locateFirst(List<ImgPanel> listImgPanel, String retorno) {
        ImgPanel ret=null;
        for (ImgPanel img : listImgPanel) {
            if (img.getRetorno().equals(retorno)) {
                ret=img;
                break;
            }
        }
        return ret;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLimagem = new javax.swing.JLabel();
        jLinha1 = new javax.swing.JLabel();
        jLinha2 = new javax.swing.JLabel();
        jLinha3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLimagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLimagem.setText("(imagem)");
        jLimagem.setMaximumSize(new java.awt.Dimension(55, 55));
        jLimagem.setMinimumSize(new java.awt.Dimension(55, 55));
        jLimagem.setPreferredSize(new java.awt.Dimension(55, 55));

        jLinha1.setText("Linha 1");

        jLinha2.setText("Linha 2");

        jLinha3.setText("Linha 3");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLimagem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(7, 7, 7)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLinha3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                    .add(jLinha1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                    .add(jLinha2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE))
                .add(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(3, 3, 3)
                .add(jLinha1)
                .add(4, 4, 4)
                .add(jLinha2)
                .add(4, 4, 4)
                .add(jLinha3))
            .add(layout.createSequentialGroup()
                .add(0, 0, 0)
                .add(jLimagem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private static class ImgRender implements ListCellRenderer {

        private static Color corBack = new Color(96, 160, 255);

        @Override
        public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            //System.out.print(list.getClass().getName()+" / "+value.getClass().getName());
            if (value == null || list == null) {
                return null;
            }

            ImgPanel imgp = (ImgPanel) value;
            if (imgp.backgroundOriginal == null) {
                imgp.backgroundOriginal = imgp.getBackground();
            }

            if (isSelected) {
                //imgp.setBackground(list.getSelectionBackground());
                imgp.setBackground(corBack);
                imgp.setForeground(list.getSelectionForeground());
            } else {
                imgp.setBackground(imgp.backgroundOriginal);
                imgp.setForeground(list.getForeground());
            }
            return imgp;
        }
    }

    public javax.swing.JLabel getJLinha1() {
        return jLinha1;
    }

    public javax.swing.JLabel getJLinha2() {
        return jLinha2;
    }

    public javax.swing.JLabel getJLinha3() {
        return jLinha3;
    }

    public String getRetorno() {
        return retorno;
    }

    public void setRetorno(String retorno) {
        this.retorno = retorno;
    }

    public ImageIcon getImagem() {
        return imagem;
    }

    public void setImagem(ImageIcon imagem) {
        this.imagem = imagem;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLimagem;
    private javax.swing.JLabel jLinha1;
    private javax.swing.JLabel jLinha2;
    private javax.swing.JLabel jLinha3;
    // End of variables declaration//GEN-END:variables
}
